# syntax=docker/dockerfile:1

# Dockerfile for development
# Please create a separate Dockerfile with more precise dependencies for production.

# Reason for image correct as of 23 Jun 2022:
#  - Latest 11.x version of CUDA (CUDA 11.x minor version compatibility guarantee)
#  - Only CUDA Runtime & cuDNN needed for most AI training & inference frameworks
#  - There is not yet a Ubuntu 22.04 image with cudnn8
#  - It is difficult to install CUDA in Docker properly so Nvidia's images must be used
FROM nvidia/cuda:11.6.2-cudnn8-runtime-ubuntu20.04

# UTF-8 included in nvidia's image but not activated. Needed for a lot of things.
ENV LANG="C.UTF-8" LC_ALL="C.UTF-8"

# Below RUN statements are broken up to allow changing with minimal need for rebuilding

# Apparently needed in order to successfully add a repository
RUN echo 'Etc/UTC' > /etc/timezone \
  && ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime

RUN apt-get update \
  # Needed to curl then authorize ROS2 repository key
  && apt-get install -y curl gnupg lsb-release software-properties-common \
  # Enable universe repositories
  && add-apt-repository universe

# Curl key & authorize ros repository
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" > /etc/apt/sources.list.d/ros2.list

# Opted for ROS2 Foxy as we are stuck on Ubuntu 20.04 till Nvidia updates their images
# It has the latest EOL & better ecosystem support as Humble is still too new
ARG ROS_DISTRO=foxy 
ENV ROS_DISTRO=$ROS_DISTRO

# For sanity reasons, the ros-desktop download was broken up into a few steps (for example, connection error)
# RUN apt-get update && apt-get upgrade -y
RUN apt-get update
RUN apt-get install -y ros-${ROS_DISTRO}-ros-base
# ROS2 Qt comes with good debugging tools, is also framework for adding your own visualizations or control panel.
RUN apt-get install -y ~nros-${ROS_DISTRO}-rqt*
# One of the dependencies somehow breaks Xsession. So we won't use the entire suite.
# Anyways, it is better for dependency management to consciously install things.
# See https://github.com/ros2/variants/blob/master/desktop/package.xml
# and browse https://index.ros.org/ to find out what was installed
# RUN apt-get install -y ros-foxy-desktop

# Install sudo for non-root user to use root (to install stuff).
RUN apt install -y sudo git

# Use Python Black formatter
RUN apt install -y black

# Create user & add to sudoers
ARG USERNAME=user
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG USER_SH=/bin/bash
RUN groupadd -g $USER_GID $USERNAME \
  && useradd -u $USER_UID -g $USER_GID -s $USER_SH -m $USERNAME \
  && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
  && chmod 0440 /etc/sudoers.d/$USERNAME

USER $USERNAME