# syntax=docker/dockerfile:1

# Dockerfile for development
# Please create a separate Dockerfile with more precise dependencies for production.

# Reason for image correct as of 23 Jun 2022:
#  - Latest 11.x version of CUDA (CUDA 11.x minor version compatibility guarantee)
#  - Only CUDA Runtime & cuDNN needed for most AI training & inference frameworks
#  - There is not yet a Ubuntu 22.04 image with cudnn8
#  - It is difficult to install CUDA in Docker properly so Nvidia's images must be used
FROM nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu22.04
ARG DEBIAN_FRONTEND=noninteractive

# UTF-8 included in nvidia's image but not activated. Needed for a lot of things.
ENV LANG="C.UTF-8" LC_ALL="C.UTF-8"

# Below RUN statements are broken up to allow changing with minimal need for rebuilding

# Apparently needed in order to successfully add a repository
RUN echo 'Etc/UTC' > /etc/timezone \
  && ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime

RUN apt-get update \
  # Needed to curl then authorize ROS2 repository key
  && apt-get install -y curl gnupg lsb-release software-properties-common \
  # Enable universe repositories
  && add-apt-repository universe

# Curl key & authorize ros repository
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" > /etc/apt/sources.list.d/ros2.list

# It has the latest EOL & better ecosystem support as Humble is still too new
ARG ROS_DISTRO=humble 
ENV ROS_DISTRO=$ROS_DISTRO

# For sanity reasons, the ros-desktop download was broken up into a few steps (for example, connection error)
# RUN apt-get update && apt-get upgrade -y
RUN apt-get update
RUN apt-get install -y \
  ros-${ROS_DISTRO}-ros-base \
  python3-rosdep \
  python3-colcon-common-extensions \
  python3-pip

# Set default version of python to be the one ROS2 Humble uses
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.10 10

# Initialize rosdep
RUN rosdep init && rosdep update

# ROS2 Qt comes with good debugging tools, is also framework for adding your own visualizations or control panel.
RUN apt-get install -y ~nros-${ROS_DISTRO}-rqt*

# One of the dependencies somehow breaks Xsession. So we won't use the entire suite.
# Anyways, it is better for dependency management to consciously install things.
# See https://github.com/ros2/variants/blob/master/desktop/package.xml
# and browse https://index.ros.org/ to find out what was installed
# RUN apt-get install -y ros-${ROS_DISTRO}-desktop

# Install sudo for non-root user to use root (to install stuff).
RUN apt-get install -y sudo git

# Use Python Black formatter
RUN apt-get install -y black

# Install some common dependencies
# RUN apt-get install -y python3-opencv ros-${ROS_DISTRO}-rosbridge-suite

# Enable openCL support (openCV autodetects this & will use it to accelerate)
RUN mkdir -p /etc/OpenCL/vendors && \
  echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

# Create user & add to sudoers
ARG USERNAME=user
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG USER_SH=/bin/bash
RUN groupadd -g $USER_GID $USERNAME \
  && useradd -u $USER_UID -g $USER_GID -s $USER_SH -m $USERNAME \
  && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
  && chmod 0440 /etc/sudoers.d/$USERNAME

# Add VNC for debugging
COPY ./.devcontainer/scripts/desktop-lite-debian.sh /tmp/scripts/desktop-lite-debian.sh
ENV DBUS_SESSION_BUS_ADDRESS="autolaunch:" \
  VNC_RESOLUTION="1440x768x16" \
  VNC_DPI="96" \
  VNC_PORT="5901" \
  NOVNC_PORT="6080" \
  DISPLAY=":1"
RUN bash /tmp/scripts/desktop-lite-debian.sh $USERNAME password

COPY ./entrypoint.sh /entrypoint.sh
# just in case
RUN chmod +x /entrypoint.sh
ENTRYPOINT [ \
  # VNC entrypoint
  "/usr/local/share/desktop-init.sh", \
  # ROS entrypoint
  "/entrypoint.sh" \
  ]

USER $USERNAME

# Auto-activate ROS whenever shell is opened
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash\nsource /code/install/local_setup.bash" >> ~/.bashrc

# Ensure rqt icons show up
RUN mkdir ~/.icons && ln -s /usr/share/icons/Tango ~/.icons/hicolor

# Needed for devcontainer hooks to run
COPY ./.devcontainer /tmp/.devcontainer